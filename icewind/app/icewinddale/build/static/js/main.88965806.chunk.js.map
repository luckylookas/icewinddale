{"version":3,"sources":["features/header/navbar/Navbar.tsx","features/header/Header.tsx","features/content/Content.tsx","features/character/CharacterFormOptions.tsx","features/forms/textfield/option/CompleteOption.tsx","features/forms/textfield/TextField.tsx","features/content/content-area/ScrollableContentArea.tsx","features/forms/step/FormStep.tsx","features/character/OriginValues.tsx","features/content/content-area/ContentArea.tsx","features/character/FinalView.tsx","features/character/Character.tsx","features/about/About.tsx","features/magic/Magic.tsx","features/survival/Survival.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","location","useLocation","mobile","useMediaQuery","className","pathname","to","Header","Content","children","TYPEHELP","getVocalPreposition","str","toUpperCase","startsWith","TYPES","DESCRIPTORS","FLAVORS","FOCI","CompleteOption","onClick","value","label","onMouseDown","TextField","onBlur","hint","setValue","link","optionsSource","useState","options","setOptions","active","setActive","onFocusLost","useEffect","onOption","name","autoFocus","type","placeholder","onFocus","onKeyUp","event","stopPropagation","preventDefault","key","onChange","$event","target","href","rel","length","slice","map","option","ScrollableContentArea","FormStep","props","CSSTransition","unmountOnExit","timeout","in","classNames","ORIGINS","text","details","ContentArea","FinalView","CharacterForm","pname","setPname","setName","descriptor","setDescriptor","setType","flavor","setFlavor","focus","setFocus","step","setStep","character","setCharacter","origin","setOrigin","advance","condition","char","characterToString","f","filter","it","d","includes","tmp","find","dangerouslySetInnerHTML","__html","alt","src","About","Magic","Survival","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qYAKaA,EAAa,WACtB,IAAMC,EAAWC,cACXC,EAASC,YAAc,uBAE7B,OAAO,qBAAKC,UAAW,MAAhB,SAECF,EAAS,eAAC,WAAD,WACD,cAAC,IAAD,CAAME,UAAiC,eAAtBJ,EAASK,SAA4B,uBAAyB,gBAAiBC,GAAK,aAArG,uBACA,cAAC,IAAD,CAAMF,UAAiC,WAAtBJ,EAASK,SAAwB,uBAAyB,gBAAiBC,GAAK,SAAjG,mBACA,cAAC,IAAD,CAAMF,UAAiC,cAAtBJ,EAASK,SAA2B,uBAAyB,gBAAiBC,GAAK,YAApG,sBACA,cAAC,IAAD,CAAMF,UAAiC,WAAtBJ,EAASK,SAAwB,uBAAyB,gBAAiBC,GAAI,SAAhG,0BAEJ,eAAC,WAAD,WACI,qBAAKF,UAAW,SAChB,cAAC,IAAD,CAAMA,UAAiC,eAAtBJ,EAASK,SAA4B,iBAAmB,UAAWC,GAAK,aAAzF,uBACA,cAAC,IAAD,CAAMF,UAAiC,WAAtBJ,EAASK,SAAwB,iBAAmB,UAAWC,GAAK,SAArF,mBACA,cAAC,IAAD,CAAMF,UAAiC,cAAtBJ,EAASK,SAA2B,iBAAmB,UAAWC,GAAK,YAAxF,sBACA,cAAC,IAAD,CAAMF,UAAiC,WAAtBJ,EAASK,SAAwB,iBAAmB,UAAWC,GAAI,SAApF,6BCVLC,MARf,WAEI,OAAO,qBAAKH,UAAW,SAAhB,SACH,cAAC,EAAD,OCGOI,G,MAPK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAElB,OAAO,qBAAKL,UAAW,oBAAhB,SACFK,M,OCWIC,G,YAAiB,CAAC,QAAU,6TAQzC,MAAQ,qWAMR,SAAW,qfASX,QAAU,qhBAqCJC,EAAsB,SAACC,GACzB,OAAOA,EAAIC,cAAcC,WAAW,MACpCF,EAAIC,cAAcC,WAAW,MAC7BF,EAAIC,cAAcC,WAAW,MAC7BF,EAAIC,cAAcC,WAAW,MAC7BF,EAAIC,cAAcC,WAAW,KAAO,KAAO,KAGlCC,EAAQ,CAAC,UAAW,QAAS,WAAY,WACzCC,EAAc,CAAC,YAAa,cAAe,QAAS,OAC3D,UACA,WACA,SACA,SACA,SACA,WACA,QACA,eACA,SACA,WACA,SACA,OACA,UACA,WACA,UACA,QACA,UACA,YACA,YACA,cACA,cACA,YACA,SACA,OACA,UACA,QACA,MACA,aACA,aACA,QACA,aACA,YACA,cACA,SACA,aACA,YACA,WACA,SACA,gBACA,QACA,cACA,QACA,UACA,WACA,SACOC,EAAU,CAAC,UAAW,SAAU,QAAS,aACzCC,EAAO,CAChB,kBACA,iBACA,iBACA,uBACA,uBACA,8BACA,8BACA,4BACA,wBACA,wBACA,yBACA,kBACA,mBACA,mBACA,uBACA,0BACA,mBACA,mBACA,yBACA,kBACA,2BACA,mBACA,aACA,+BACA,gCACA,uBACA,eACA,sBACA,2BACA,4BACA,sBACA,oBACA,QACA,cACA,qBACA,uBACA,qBACA,QACA,iBACA,0BACA,oBACA,kBACA,iBACA,oBACA,mBACA,oBACA,mBACA,sBACA,UACA,iBACA,iBACA,sBACA,6BACA,uBACA,QACA,sBACA,YACA,iCACA,YACA,cACA,2BACA,0BACA,oBACA,gCACA,iBACA,mBACA,qBACA,wBACA,8BACA,WACA,eACA,uBACA,oBACA,6BACA,qBACA,iBACA,wBACA,mBACA,2BCtMWC,G,MANgC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAC7D,OAAO,qBAAKC,YAAa,WACrBH,EAAQC,IADL,SAEHC,GAAgBD,MCGXG,EAAgC,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,KAAMJ,EAAiD,EAAjDA,MAAOD,EAA0C,EAA1CA,MAAOM,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,cAAmB,EAC5EC,mBAAmB,IADyD,mBACnGC,EADmG,KAC1FC,EAD0F,OAE9EF,oBAAS,GAFqE,mBAEnGG,EAFmG,KAE3FC,EAF2F,KAQpGC,EAAc,WAChBD,GAAU,GACNT,GACAA,KAIRW,qBAAU,WACEP,GACAG,EAAWH,EAAcR,MAElC,CAACA,EAAOQ,IAEX,IAAMQ,EAAW,SAAChB,GACdM,EAASN,GACTa,GAAU,IAGd,OAAO,gCACH,sBAAM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","file":"static/js/main.88965806.chunk.js","sourcesContent":["import React, {FC} from \"react\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {useMediaQuery} from \"@material-ui/core\";\nimport { Fragment } from \"react\";\n\nexport const Navbar: FC = () => {\n    const location = useLocation();\n    const mobile = useMediaQuery('(max-width: 750px) ');\n\n    return <div className={\"nav\"}>\n        {\n            mobile ? <Fragment>\n                    <Link className={location.pathname === '/character' ? \"navlink_active_small\" : \"navlink_small\"} to = \"/character\">Character</Link>\n                    <Link className={location.pathname === '/magic' ? \"navlink_active_small\" : \"navlink_small\"} to = \"/magic\">Magic</Link>\n                    <Link className={location.pathname === '/survival' ? \"navlink_active_small\" : \"navlink_small\"} to = \"/survival\">Survival</Link>\n                    <Link className={location.pathname === '/about' ? \"navlink_active_small\" : \"navlink_small\"} to={\"/about\"}>Impressum</Link>\n            </Fragment> :\n                <Fragment>\n                    <div className={'logo'}></div>\n                    <Link className={location.pathname === '/character' ? \"navlink_active\" : \"navlink\"} to = \"/character\">Character</Link>\n                    <Link className={location.pathname === '/magic' ? \"navlink_active\" : \"navlink\"} to = \"/magic\">Magic</Link>\n                    <Link className={location.pathname === '/survival' ? \"navlink_active\" : \"navlink\"} to = \"/survival\">Survival</Link>\n                    <Link className={location.pathname === '/about' ? \"navlink_active\" : \"navlink\"} to={\"/about\"}>Impressum</Link>\n                </Fragment>\n        }\n    </div>\n}","import React from 'react';\nimport './Header.css';\nimport {Navbar} from \"./navbar/Navbar\";\n\nfunction Header() {\n\n    return <div className={\"header\"}>\n        <Navbar/>\n    </div>\n\n}\n\nexport default Header;\n","import React, {FC} from \"react\";\nimport \"./Content.css\"\n\nconst Content: FC = ({children}) => {\n\n    return <div className={'content-container'}>\n        {children}\n    </div>\n}\n\nexport default Content;\n","import \"../forms/forms.css\"\n\n\nexport interface Character {\n    pname: string\n    name: string\n    type: string\n    descriptor: string\n    flavor: string\n    focus: string\n    origin: string\n}\n\ninterface Help {\n    [key: string]: string;\n}\n\nexport const TYPEHELP :Help = {'WARRIOR': `\nYou are a physical fighter, either nimble and quick or strong like an ox. \n<br />\nYou wield any weapon with expertise and overcome challenges with force or dexterity.\n<br /><br />Anyone would be happy to be your ally in a fight.\n<br /><br />\nWarriors are: Barbarians, Knights, Duelists or Veteran Soldiers\n`,\n'ADEPT': `Your master powers beyond the physical world. Your greatest weapon is Your mind.<br />\nYou wield Magic to fight enemies or boost your allies.<br /> You try to solve Problems by thinking about them.\n<br /><br />Anyone would be glad to get your help when dealing with the supernatural.\n<br /><br />\nAdepts are: Wizards, Warlocks, Sorcerers or Priests\n`,\n'EXPLORER': `You live for the action. <br />\nYour are dexterous and clever enough to live through the toughest situations.<br />\nWhile not as studied as Adepts, nur as steeled in fights as Warriors, nobody can  hold the candle to your ability to survive\nin eny envirnoment and situation.\n<br /><br />\nAnyone would be glad to be on your side if things start to go south.\\\n<br /><br />\nExplorers are any type of Character that needs physical and mental abilities like War-Clerics/Inquisitors, Monks or Rangers`\n,\n'SPEAKER': `The word in mightier than the sword.<br /> Where others fight, jump or shoot lighting and hurt themselves,\n you solve issues by communicating. You know you are not a fighter, because you don't have to be.\n <br />Even if violence is appropriate, you have your ways to let others gladly do the work for you.\n<br /><br />Friend and foe alike will rejoice to see you instead of a brutish barbarian in almost any situation!\n<br /><br />\nSpeakers can be any type of non violent Character like Bards, Scholars, Priests or Teachers`};\n\nexport const characterToString = (char: Character): string => {\n    let str = `You are `;\n    if (char.pname) {\n        str = str + char.pname + ` and will be playing as `\n    }\n    if (char.name) {\n        str = str + char.name + `, a`\n    }\n    if (char.descriptor) {\n        str = str + getVocalPreposition(char.descriptor)\n        str += char.descriptor + ` `\n    }\n    if (char.type) {\n        str += char.type + ` specialized in `\n    }\n    if (char.flavor) {\n        str += char.flavor + ` who `\n    }\n    if (char.focus) {\n        str += char.focus\n    }\n\n    if(!(char.pname && char.name && char.descriptor && char.type && char.flavor && char.focus)) {\n        str += ` ...`\n    } else {\n        str += '.'\n    }\n    return str;\n}\n\nconst getVocalPreposition = (str: string): string => {\n    return str.toUpperCase().startsWith('A') ||\n    str.toUpperCase().startsWith('E') ||\n    str.toUpperCase().startsWith('I') ||\n    str.toUpperCase().startsWith('O') ||\n    str.toUpperCase().startsWith('U') ? 'n ' : ' '\n}\n\nexport const TYPES = [\"Warrior\", \"Adept\", \"Explorer\", \"Speaker\"]\nexport const DESCRIPTORS = ['appealing', 'Beneficient', 'Brash', 'calm'\n    , 'chaotic'\n    , 'charming'\n    , 'clever'\n    , 'clumsy'\n    , 'craven'\n    , 'creative'\n    , 'cruel'\n    , 'dishonorable'\n    , 'doomed'\n    , 'empathic'\n    , 'exiled'\n    , 'fast'\n    , 'foolish'\n    , 'graceful'\n    , 'guarded'\n    , 'hardy'\n    , 'hideous'\n    , 'honorable'\n    , 'impulsive'\n    , 'inquisitive'\n    , 'intelligent'\n    , 'intuitive'\n    , 'jovial'\n    , 'kind'\n    , 'learned'\n    , 'lucky'\n    , 'mad'\n    , 'mechanical'\n    , 'mysterious'\n    , 'naive'\n    , 'perceptive'\n    , 'resilient'\n    , 'risk-taking'\n    , 'rugged'\n    , 'sharp-eyed'\n    , 'skeptical'\n    , 'stealthy'\n    , 'strong'\n    , 'strong-willed'\n    , 'swift'\n    , 'tounge-tied'\n    , 'tough'\n    , 'vicious'\n    , 'virtuous'\n    , 'wierd']\nexport const FLAVORS = ['Stealth', 'Combat', 'Magic', 'Knowledge']\nexport const FOCI = [\n    'abides in stone',\n    'absorbs energy',\n    'awakens dreams',\n    'bears a halo of fire',\n    'blazes with radiance',\n    'brandishes an exotic shield',\n    'calculates the incalculable',\n    'channels divine blessings',\n    'commadn mental powers',\n    'conducts wierd sience',\n    'consorts with the dead',\n    'controls beasts',\n    'controls gravity',\n    'crafts illusions',\n    'craft unqiue objects',\n    'dances with dark matter',\n    'defends the gate',\n    'defends the weak',\n    'descends from nobility',\n    \"doesn't do much\",\n    'emerged from the obelisk',\n    'eploys magnetism',\n    'entertains',\n    'exists in two places at once',\n    'exists partially out of phase',\n    'explores dark places',\n    'fights dirty',\n    'fights with panache',\n    'focuses mind over matter',\n    'grows to towering heights',\n    'helps their friends',\n    'howls at the moon',\n    'hunts',\n    'infiltrates',\n    'interprets the law',\n    'is wanted by the law',\n    'keeps a magic ally',\n    'leads',\n    'learns quickly',\n    'lives in the wilderness',\n    'looks for trouble',\n    'masters defense',\n    'masters spells',\n    'masters the swarm',\n    'masters weaponry',\n    'metes out justice',\n    'moves like a cat',\n    'moves liek the wind',\n    'murders',\n    'need no weapon',\n    'never says die',\n    'operates undercover',\n    'performs feats of strength',\n    'plays too many games',\n    'rages',\n    'rides the lightning',\n    'runs away',\n    'sailed beneath the jolly roger',\n    'scavenges',\n    'sees beyond',\n    'separates mind from body',\n    'shepherds the community',\n    'shepherds spirits',\n    'shreds the walls of the world',\n    'slays monsters',\n    'solves mysteries',\n    'speaks of the land',\n    'stands like a bastion',\n    'throws with deadly accuracy',\n    'thunders',\n    'was foretold',\n    'wears a sheen of ice',\n    'wears power armos',\n    'wields two weapons at once',\n    'works for a living',\n    'works miracles',\n    'works the back alleys',\n    'works the system',\n    'would rather be reading'\n\n]","import React, {FC} from \"react\";\n\ninterface OptionProps {\n    onClick: (value: string) => void\n    value: string;\n    label?: string;\n}\n\nexport const CompleteOption: FC<OptionProps> = ({onClick, value, label}) => {\n    return <div onMouseDown={() => {\n        onClick(value)\n    }}>{label ? label : value}</div>\n}\n\nexport default CompleteOption;\n","import React, {FC, useEffect, useState} from \"react\";\nimport \"./TextField.css\"\nimport CompleteOption from \"./option/CompleteOption\";\n\nexport interface TextFieldProps {\n    hint?: string;\n    label: string\n    setValue: (value: string) => void\n    value: string\n    link?: string\n    optionsSource?: (filter: string) => string[]\n    onBlur?: () => void\n}\n\nexport const TextField: FC<TextFieldProps> = ({onBlur, hint, label, value, setValue, link, optionsSource}) => {\n    const [options, setOptions] = useState<string[]>([])\n    const [active, setActive] = useState(false);\n\n    const onFocus = () => {\n        setActive(true);\n    }\n\n    const onFocusLost = () => {\n        setActive(false);\n        if (onBlur) {\n            onBlur();\n        }\n    }\n\n    useEffect(() => {\n            if (optionsSource) {\n                setOptions(optionsSource(value))\n            }\n    }, [value, optionsSource])\n\n    const onOption = (value: string) => {\n        setValue(value);\n        setActive(false);\n    }\n\n    return <div>\n        <span className={'label'}>{label}</span>\n        <div className='textfield'>\n            <input name={label}\n                   autoFocus\n                   type='text'\n                   placeholder={hint ? hint : ''}\n                   value={value}\n                   onFocus={onFocus}\n                   onBlur={onFocusLost}\n                   onKeyUp={(event) => {\n                       event.stopPropagation();\n                       event.preventDefault();\n                       if (event.key.toUpperCase() === 'ENTER') {\n                           onFocusLost();\n                       }\n                   }}\n                   onChange={($event) => setValue($event.target.value)}/>\n            {\n                link ? <a className={'help'} href={link} rel='noreferrer' target='_blank'>?</a> : null\n            }\n            {\n                options.length && active\n                    ?\n                    <div className={'options'}>\n                        {options.slice(0, 100).map(option => <CompleteOption key={option} onClick={onOption} value={option} />)}\n                    </div>\n                    :\n                    null\n            }\n        </div>\n    </div>\n}\n","import {FC} from \"react\";\nimport \"./ContentArea.css\"\n\nexport const ScrollableContentArea: FC = ({children}) => {\n    return (\n            <div className=\"scrollableContentArea\">{children}</div>\n    );\n}","import React, {FC} from \"react\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport {ContentArea} from \"../../content/content-area/ContentArea\";\nimport {ScrollableContentArea} from \"../../content/content-area/ScrollableContentArea\";\n\ninterface FormStepProps {\n    active: boolean\n}\n\nexport const FormStep: FC<FormStepProps> = (props) => {\n    return <CSSTransition unmountOnExit timeout={10000} in={props.active} classNames={'formstep'}>\n        <ScrollableContentArea>\n            {props.children}\n        </ScrollableContentArea>\n    </CSSTransition>\n}\n\nexport default FormStep;","import \"../forms/forms.css\"\n\nexport interface Origin {\n    text: string,\n    key: string,\n    details: string\n}\n\nexport const ORIGINS: Origin[] =  [\n    {text: 'I know of an Artefact worth a kingdom stranded in the dale.', key: 'artefact', details:`\n            I searched far and wide for pieces of the cross of Vigil, a 3 foot golden cross set with 6 rubies.\n            But your ambition is not for the coin this artefact will earn you. Far more interestingly,\n            The cross is the key to open the material planes connection to Avernus.\n            <br />\n            For unknown reasons, the Duke of Avernus sealed the Gates and left the key with mortal Soldiers, formerly known as Hellriders, but from then on they were the\n            Order of the Cross.\n            <br />\n            As the decades and centuries passed, the Order of the Cross vanished and the crosses original purpose was forgotten.\n            You found, that a Pirate Ship named 'The Dark Duchess' must have carried it last.\n            The Pirates stole the cross from a Transport to Chult and fled the Imperial fleet to the north about one and a halt years ago.\n            The ship was never seen again.\n            <br />\n            <br />\n            This artefact must not fall into the wrong hands, and it might just be stranded in icewind dale.\n        `},\n    {text: 'ancient magic beyond belief is conserved in ice.',key: 'artefact', details: `\n            Before the Humans, the Goliaths roamed the tundra. Before the Goliaths, the Giants rules the World from their Throne in the North.\n            <br />\n            Before the Giants, the Capital of the Legendary Nethereese Empire was rumored to be there.\n            Their skill and knowledge about the weave are unparalleled today and you have heard rumors of artefacts surfacing in icewind dale.\n            <br />\n            <br />\n            Dazan the red of Thane went to ice wind dale to  find out more, but never returned - this might be your chance to make a name for\n            yourself as a Wizard to the Arcane Brotherhood.\n        `},\n    {text: 'my brothers and I left our heritage long ago. I return to claim it.',key: 'artefact', details: `\n            That's it. You traveled the world, learned a trade, earned a living. It is now time to go home.\n            Home where you and your 4 brothers could not agree on a name for your tavern in Bremen, so you opened 5 of them next to each other.\n            <br />\n            All of you lost all your gold and all of you had to leave.\n            <br />\n            But you miss the northern people, the clean water, the mountains, even the cold.\n            <br />\n            <br />\n            You figure no one will have bothered to tear down your tavern and maybe, just maybe, you will finally see your brothers again.\n        `},\n    {text: 'my Grandmothers sister was taken to the north by witches.',key: 'artefact', details: `\n            An old story in our family, Grandma told it over and over again.\n            Her sister, Hilda, was once taken by witches.\n            <br />\n            'Oh boy, the doors flew open from the wind and it carried Hildie with it one day. I will never forget the evil whispers.\n            And the cold! The wind was ever so cold!'\n            <br />\n            when rumors of witches reached my father and brother 5 years ago, they took up arms and traveled north.\n            'To Bremen and then we will see'. That is the last I ever heard of them.\n            <br />\n            <br />\n            Now that Grandma is dead, it is time for me to look for them, and the witches that seem to be the bane of my family.\n        `},\n    {text: 'I have strange nightmares of black ice that draw me north.',key: 'artefact', details: `\n           A black obelisk. A ship growing tentacles. clicking. growling. red eyes int he dark.<br />\n\n            Chewing noises, a floating city. A monster, covering the sun.<br />\n            Darkness. You are cold. A shrill screech. A Diamond,impossibly shaped, glowing with colors you cannot name.<br />\n            An owl. without eyes...\n            <br /><br />\n            You awake. sweating. again.<br />\n            Your dreams draw you north.\n            Something is calling you. Calling for...aid? And it won't stop until you come.\n        `},\n    {text: \"Kelvin's Cairn is the hardest climb there is and I will make it!\",key: 'artefact', details:\n            `You have all the money you can ever need,\n                a Mansion, all the influence and fame one could achieve. <br />\n                You are bored.<br /><br />\n                The last time you felt alive was when you sclaed the Dragon's Mountain in Chult last year.\n                The Jungle, he Insects. the Undead, the heat, the stories!<br /> You need another adventure!<br />\n                <br />\n                And a new Adventure you found! Kelvin's Cairn, at the center of icewind dale.\n                6 miles high, covered in snow deep enough to cover the yetis living there!\n                You prepared for 6 months. You are ready!\n                <br /><br />\n                People from the north warned you about 'the never ending winter' up there. But that is just what you want, a challenge!\n            `},\n    {text: 'an Angel tasked me to save Ten Towns from their impending doom.', key: 'artefact', details: `\n            Was that a dream? No she was real. <br />\n            And she meant you! You have to go north and bring hope to the people of icewind dale!\n            They must be prepared for what is to come.<br />\n            You must save them. From whatever is about to happen. Or has already happened?<br />\n            The invisible devils from the underdark have come she said. <br />The Frostmaiden brought icewind dale to their knees, but the killing blow comes not from ice.\n            It comes from a dragon.<br /><br />\n            The winds of winter has weakened their spirits, they cannot stand and fight for themselves anymore.\n            What did she mean?<br /><br />\n            Devils? No one has seen devils for hundreds of years...\n            `},\n]\n","import {FC} from \"react\";\nimport \"./ContentArea.css\"\n\nexport const ContentArea: FC = ({children}) => {\n    return (\n            <div className=\"contentArea\">{children}</div>\n    );\n}","import {FC} from \"react\";\n\nexport const FinalView: FC = ({children}) => {\n    return (<div className={'finalview'}>\n            {children}\n        </div>\n    );\n}\n\nexport default FinalView;","import React, { useEffect, useState} from \"react\";\nimport \"./Character.css\"\nimport {Character, characterToString, DESCRIPTORS, FLAVORS, FOCI, TYPEHELP, TYPES} from \"./CharacterFormOptions\";\nimport {TextField} from \"../forms/textfield/TextField\";\nimport FormStep from \"../forms/step/FormStep\";\nimport { ORIGINS} from \"./OriginValues\";\nimport {ContentArea} from \"../content/content-area/ContentArea\";\nimport FinalView from \"./FinalView\";\nimport { Fragment } from \"react\";\n\nconst toggleAAn = (str: string): string => {\n    return str.toUpperCase().startsWith('A') ||\n    str.toUpperCase().startsWith('E') ||\n    str.toUpperCase().startsWith('I') ||\n    str.toUpperCase().startsWith('O') ||\n    str.toUpperCase().startsWith('U') ? ' an ' : ' a '\n}\n\nfunction CharacterForm() {\n\n    const [pname, setPname] = useState('')\n    const [name, setName] = useState('')\n    const [descriptor, setDescriptor] = useState('')\n    const [type, setType] = useState('')\n    const [flavor, setFlavor] = useState('')\n    const [focus, setFocus] = useState('')\n\n    const [step, setStep] = useState(0)\n    const [character, setCharacter] = useState('')\n    const [origin, setOrigin] = useState('')\n\n    const advance = (condition: boolean, target: number) => {\n        if (condition) {\n            setStep(target);\n\n        }\n    }\n    useEffect(() => {\n        setCharacter(characterToString({pname, name, descriptor, type, flavor, focus, origin} as Character))\n    }, [origin, step, pname, name, descriptor, type, flavor, focus])\n\n    return <Fragment>\n        { step < 6 ?\n                <ContentArea>{character}</ContentArea> : null\n        }\n\n        <FormStep active={step === 0}>\n            <TextField\n                label={'You are '}\n                       hint={\"Player's name\"}\n                       setValue={setPname}\n                       value={pname}/>\n\n            <div className={'buttons'}>\n                <div className={pname ? 'button' : 'buttondisabled'} onClick={() => advance(!!pname,1)}>\n                    {'>>'}</div>\n            </div>\n\n        </FormStep>\n        <FormStep active={step === 1}>\n            <TextField label={' and will be '}\n                       hint={\"Character's name\"}\n                       setValue={setName}\n                       value={name}/>\n            <div className={'buttons'}>\n                <div className={'button'} onClick={() => advance(true,0)}>\n                    {'<<'}</div>\n                <div className={name ? 'button' : 'buttondisabled'} onClick={() => advance(!!name, 2)}>\n                    {'>>'}</div>\n            </div>\n        </FormStep>\n        <FormStep active={step === 2}>\n            <TextField label={toggleAAn(descriptor)} setValue={setDescriptor}\n                       optionsSource={(f: string) => DESCRIPTORS.filter(it => it.toUpperCase().startsWith(f.toUpperCase()))}\n                       value={descriptor}\n                       hint={'Descriptor'}\n                       link={\"http://cypherguide.com/descriptors/\"}/>\n            <div className={'buttons'}>\n                <div className={'button'} onClick={() => advance(true, 1)}>\n                    {'<<'}</div>\n                <div className={DESCRIPTORS.map(d => d.toUpperCase()).includes(descriptor.toUpperCase()) ? 'button' : 'buttondisabled'}\n                     onClick={() => advance(DESCRIPTORS.map(d => d.toUpperCase()).includes(descriptor.toUpperCase()),3)}>\n                    {'>>'}</div>\n            </div>\n        </FormStep>\n        <FormStep active={step === 3}>\n            <TextField label={' '}\n                       setValue={setType}\n                       value={type}\n                       hint={'Type'}\n                       optionsSource={(f: string) => TYPES.filter(it => it.toUpperCase().startsWith(f.toUpperCase()))}\n                       link={\"http://cypherguide.com/types/\"}/>\n            <div className={'buttons'}>\n                <div className={'button'} onClick={() => advance(true,2)}>\n                    {'<<'}</div>\n                <div\n                    className={TYPES.map(d => d.toUpperCase()).includes(type.toUpperCase()) ? 'button' : 'buttondisabled'}\n                     onClick={() => advance(TYPES.map(d => d.toUpperCase()).includes(type.toUpperCase()), 4)}>\n                    {'>>'}</div>\n            </div>\n        </FormStep>\n        <FormStep active={step === 4}>\n            <TextField label={' specializing in '}\n                       setValue={setFlavor}\n                       hint={'Flavor'}\n                       optionsSource={(f: string) => FLAVORS.filter(it => it.toUpperCase().startsWith(f.toUpperCase()))}\n                       value={flavor}/>\n            <div className={'buttons'}>\n                <div className={'button'} onClick={() => advance(true,3)}>\n                    {'<<'}</div>\n                <div className={'button'} onClick={() => advance(true, 5)}>\n                    {'>>'}</div>\n            </div>\n        </FormStep>\n        <FormStep active={step === 5}>\n            <TextField label={' who '} hint={'Focus'}\n                       setValue={setFocus} value={focus}\n                       optionsSource={(f: string) => FOCI.filter(it => it.toUpperCase().startsWith(f.toUpperCase()))}\n                       link={\"http://cypherguide.com/foci/\"}/>\n            <div className={'buttons'}>\n                <div className={'button'} onClick={() => advance(true, 4)}>\n                    {'<<'}</div>\n                <div\n                     className={FOCI.map(d => d.toUpperCase()).includes(focus.toUpperCase()) ? 'button' : 'buttondisabled'}\n                     onClick={() => advance(FOCI.map(d => d.toUpperCase()).includes(focus.toUpperCase()),6)}>\n                    {'>>'}</div>\n            </div>\n        </FormStep>\n        <FormStep active={step === 6}>\n            <h1>{character}</h1>\n            <div className={'buttons'}>\n                <div className={'button'} onClick={() => advance(true, 5)}>\n                    {'no'}</div>\n                <div className={'button'} onClick={() => advance(true,7)}>\n                    {'yes'}</div>\n            </div>\n        </FormStep>\n        <FormStep active={step === 7}>\n            <TextField label={'i came to icewind dale because '}\n                       hint={\"so, why have you come?\"}\n                       setValue={value => {\n                           const tmp = ORIGINS.find(it => it.text.toUpperCase() === value.toUpperCase())\n                           if (tmp) {\n                               setOrigin(tmp.details)\n                           }\n                       }}\n                       optionsSource={() => ORIGINS.map(it => it.text)}\n                       value={origin}\n            />\n\n        </FormStep>\n\n        {\n            type && TYPEHELP[type.toUpperCase()] && step === 3 ?\n               <ContentArea>\n                   <div dangerouslySetInnerHTML={{__html: TYPEHELP[type.toUpperCase()]}} />\n               </ContentArea> : null\n        }\n        {\n            origin && step === 7 ?\n                <FormStep active={step === 7}>\n                    <div className={'ccc'} dangerouslySetInnerHTML={{__html: origin!}}/>\n                    <div className={'buttons'}>\n                        <div className={'button'} onClick={() => advance(true,6)}>\n                            {'wait, no'}</div>\n                        <div className={'button'} onClick={() => advance(true,8)}>\n                            {'embark!'}</div>\n                    </div>\n                </FormStep> : null\n        }\n        {\n            step === 8 ?\n                <FinalView>\n                    <h1>Adventure awaits!</h1>\n                    <h3>{character}</h3>\n                    <br />\n                    <div dangerouslySetInnerHTML={{__html: origin!}} />\n                    <div>\n                        <br />\n                        You pack the most necessary, you say your goodbyes and hurry of.\n                        A Dwarf by the name of Gorward IronMug operates a trading and fairing business\n                        across the Spine of the world and he agrees to take you on the next run, as he already plans to take some other people.\n                    </div>\n                    <br />\n                    <h3>the table is set</h3>\n                    <br />\n                    <div className={'tablepic'}>\n                        <img alt={'a set table'} className={'ensure_size'} src={'../tisch.jpg'} />\n                    </div>\n                </FinalView> : null\n        }\n    </Fragment>\n}\n\nexport default CharacterForm;\n","import {FC} from \"react\";\nimport \"./About.css\"\n\nexport const About: FC = () => {\n    return <div className={\"contentImpressum\"}>\n        <h2>Offenlegung gem. § 25 Mediengesetz</h2>\n        <p>Inhaber: Lukas Noll</p>\n        <p>Sitz: Wien</p>\n        <br />\n        <p>cookie free since 2021</p>\n    </div>\n}","import React,  {FC, Fragment} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {ContentArea} from \"../content/content-area/ContentArea\";\n\nexport const Magic: FC = () => {\n    return <Fragment>\n        <ContentArea>\n            <h2>cantrips & everyday magic</h2>\n            <p>\n                Use the optional spellcasting rules from the Core Rulebook (Fantasy) to craft the mage you want to play.\n            </p>\n            <p>More often than not, the correct combination if descriptor and focus should give you almost everything you need</p>\n        </ContentArea>\n\n        <ContentArea>\n            <h2>spells</h2>\n            <p>\n                The system's 'cipher-limit' are the equivalent of 'Spell slots' from Dnd 5e - with the exception that every class gets them.\n                You choose what these 'spells' are for your character.\n            </p>\n            <ul>\n            <li>Are you a Wizard from a tribe in the south who inks magic symbols into their skin, which fade when the spell is released?</li>\n            <li>Are you a Priest who needs to perform complex prayers and ceremonies to appease your diety for the next week?</li>\n            <li>Are you a totally different Priest who needs to carve totems from wood and imbue them with blood to catch magic spirits?</li>\n            <li>Are Bard who needs to practice melodies that manipulate the elements or minds of people?</li>\n            <li>Are you a Warrior who needs to meditate to channel the strength of your ancestors?</li>\n            </ul>\n            <br />\n            <p>you tell me, as long as it is unique and it's possible to fail.</p>\n        </ContentArea>\n\n        <ContentArea>\n            <h2>creating a cipher - rules</h2>\n            <p>\n                creating a cipher is a task of a pool matching your preparation technique. <br />\n                The difficulty is the {'{target-level}'} and it takes the {'{target-level}'} of rests to perform, during which you gain half the (mechanical) benefits of resting.<br />\n                The PC can apply assets and effort to reduce the difficulty as by the normal rules.<br />\n                They can also remove the longest rest by applying one point of effort, which can be done multiple times.<br />\n            </p><p>\n                so creating a level 6 cipher means: <br />\n            <br />\n                task difficulty: 6<br />\n                time required: 6 rests [ 1 action, 10 minutes, 1 hour, 8 hours, <Link to={\"/survival\"}>12 hours</Link> 1 action, 10 minutes]<br />\n            <br />\n                1 effort could reduce the difficulty to 5 or eliminate the 12 hour rest.<br />\n            <br />\n                failing the tasks consumes the time and effort spent, but yields no results.<br />\n                There is no upper limit on the cipher levels a PC can target, the lower limit is the <b>level the cipher from the book would have if you rolled a 1 on the d6 roll</b> required\n            <br /><br />\n                eg.:<br />\n                \"Age Taker\" = 1d6+4, so it can be created at level 5 or higher.\n            </p>\n        </ContentArea>\n    </Fragment>\n}","import React,  {FC, Fragment} from \"react\";\nimport {ContentArea} from \"../content/content-area/ContentArea\";\n\nexport const Survival: FC = () => {\n    return <Fragment>\n\n        <ContentArea>\n            <h2>Resting</h2>\n            <p>\n              Resting for more than 10 minutes requires a warm and dry place to have beneficial effects.<br />\n            </p>\n            <p>In addition, if a PC requires a full resting cycle all at once (eg. when preparing spells or regenerating massive amounts), an additional 12 hours are added to the time spent.</p>\n        </ContentArea>\n\n        <ContentArea>\n            <h2>nutrition and sleep</h2>\n            <p>\n                starvation or exhaustion are an ever present danger in the northern tundra. To reflect this aspect, the following moves a Character one step down the damage track.\n            </p>\n            <ul>\n                <li>Not eating once per rest cycle</li>\n                <li>Not sleeping at least once every 2 rest cycles</li>\n            </ul>\n        </ContentArea>\n\n        <ContentArea>\n            <h2>cold</h2>\n            <p>\n                every 8 hours spent in the cold, requires a might defense roll, depending on the time spent and the weather. failing this roll, moves the Character one step down the damage track.\n            </p>\n            <ul>\n                <li>+1 for each day since the last warm rest</li>\n                <li>+1 (regular day) up to +4 (heavy blizzard)</li>\n                <li>+0 (dry clothes) up to +4 (fallen into water)</li>\n            </ul>\n        </ContentArea>\n\n        <ContentArea>\n            <h2>still heroes</h2>\n            <p>\n               You are heroes, so the last step on the damage track is not necessarily 'dead'. <br />\n               You get a say in what lasting physical or mental consequences you take away from the experience.<br />\n               <br />\n               If the table deems your proposal to be adequate for what 'killed' you - you get to live.\n            </p>\n        </ContentArea>\n\n        <ContentArea>\n            <h2>supplies</h2>\n            <p>\n              Climbing Kelvins Cairn is not just hard because the way is long - it is hard because the more you take with you, the harder it gets!<br />\n              You can carry up to {'{your might pool}'} of minor items worth of supplies without penalty.<br /><br />\n              Everytime you break a multiple of your might pool, you suffer the stacking effects of wearing heavy armor. Your ability to 'ignore' these effects, only count for one stack!\n                <br />\n                <br />\n                <ul>\n                    <li>1 minor item (things you could comfortably carry multiples of on your belt or in your pockets, light weapons)</li>\n                    <li>1 medium item = 2 minor items (medium weapons, things you'd need a bag or a free hand for to carry, rations for a day)</li>\n                    <li>1 major item = 2 medium items (heavy weapons, large or especially heavy objects)</li>\n                </ul>\n            </p>\n\n        </ContentArea>\n\n    </Fragment>\n}\n\n","import React, {Fragment} from 'react';\nimport './App.css';\nimport Header from './features/header/Header';\nimport Content from './features/content/Content';\nimport CharacterForm from \"./features/character/Character\";\nimport {\n    BrowserRouter,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {About} from \"./features/about/About\";\nimport {Magic} from \"./features/magic/Magic\";\nimport {Survival} from \"./features/survival/Survival\";\n\nfunction App() {\n    return <Fragment>\n        <div className=\"bgred\">\n            <div className=\"gradient\"/>\n            <img className=\"ensure_size\" src=\"blue_red_final.jpg\" alt=\"red aurora\"/>\n        </div>\n        <div className=\"bggreen\">\n            <div className=\"gradient\"/>\n            <img className=\"ensure_size\" src=\"blue_red_final.jpg\" alt=\"green aurora\"/>\n        </div>\n        <div className=\"content\">\n            <BrowserRouter>\n          <Header />\n            <Content>\n\n                    <Switch>\n                        <Route path={\"/character\"}>\n                            <CharacterForm />\n                        </Route>\n                        <Route path={\"/magic\"}>\n                            <Magic />\n                        </Route>\n                        <Route path={\"/about\"}>\n                            <About />\n                        </Route>\n                        <Route path={\"/survival\"}>\n                            <Survival />\n                        </Route>\n                    </Switch>\n            </Content>\n            </BrowserRouter>\n        </div>\n    </Fragment>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}